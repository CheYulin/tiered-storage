// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace communication {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Gossip;
class Gossip_Tuple;
class Request;
class Request_Get;
class Request_Put;
class Response;

// ===================================================================

class Request_Get : public ::google::protobuf::Message {
 public:
  Request_Get();
  virtual ~Request_Get();

  Request_Get(const Request_Get& from);

  inline Request_Get& operator=(const Request_Get& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Get& default_instance();

  void Swap(Request_Get* other);

  // implements Message ----------------------------------------------

  inline Request_Get* New() const { return New(NULL); }

  Request_Get* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Get& from);
  void MergeFrom(const Request_Get& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Get* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:communication.Request.Get)
 private:
  inline void set_has_key();
  inline void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Request_Get* default_instance_;
};
// -------------------------------------------------------------------

class Request_Put : public ::google::protobuf::Message {
 public:
  Request_Put();
  virtual ~Request_Put();

  Request_Put(const Request_Put& from);

  inline Request_Put& operator=(const Request_Put& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Put& default_instance();

  void Swap(Request_Put* other);

  // implements Message ----------------------------------------------

  inline Request_Put* New() const { return New(NULL); }

  Request_Put* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Put& from);
  void MergeFrom(const Request_Put& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Put* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:communication.Request.Put)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Request_Put* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Get Get;
  typedef Request_Put Put;

  // accessors -------------------------------------------------------

  // optional .communication.Request.Get get = 1;
  bool has_get() const;
  void clear_get();
  static const int kGetFieldNumber = 1;
  const ::communication::Request_Get& get() const;
  ::communication::Request_Get* mutable_get();
  ::communication::Request_Get* release_get();
  void set_allocated_get(::communication::Request_Get* get);

  // optional .communication.Request.Put put = 2;
  bool has_put() const;
  void clear_put();
  static const int kPutFieldNumber = 2;
  const ::communication::Request_Put& put() const;
  ::communication::Request_Put* mutable_put();
  ::communication::Request_Put* release_put();
  void set_allocated_put(::communication::Request_Put* put);

  // @@protoc_insertion_point(class_scope:communication.Request)
 private:
  inline void set_has_get();
  inline void clear_has_get();
  inline void set_has_put();
  inline void clear_has_put();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::communication::Request_Get* get_;
  ::communication::Request_Put* put_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool err = 1 [default = false];
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 1;
  bool err() const;
  void set_err(bool value);

  // optional bool succeed = 2;
  bool has_succeed() const;
  void clear_succeed();
  static const int kSucceedFieldNumber = 2;
  bool succeed() const;
  void set_succeed(bool value);

  // optional string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional int64 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:communication.Response)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_succeed();
  inline void clear_has_succeed();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 timestamp_;
  bool err_;
  bool succeed_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class Gossip_Tuple : public ::google::protobuf::Message {
 public:
  Gossip_Tuple();
  virtual ~Gossip_Tuple();

  Gossip_Tuple(const Gossip_Tuple& from);

  inline Gossip_Tuple& operator=(const Gossip_Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gossip_Tuple& default_instance();

  void Swap(Gossip_Tuple* other);

  // implements Message ----------------------------------------------

  inline Gossip_Tuple* New() const { return New(NULL); }

  Gossip_Tuple* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gossip_Tuple& from);
  void MergeFrom(const Gossip_Tuple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gossip_Tuple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // required int64 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:communication.Gossip.Tuple)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::int64 timestamp_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Gossip_Tuple* default_instance_;
};
// -------------------------------------------------------------------

class Gossip : public ::google::protobuf::Message {
 public:
  Gossip();
  virtual ~Gossip();

  Gossip(const Gossip& from);

  inline Gossip& operator=(const Gossip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gossip& default_instance();

  void Swap(Gossip* other);

  // implements Message ----------------------------------------------

  inline Gossip* New() const { return New(NULL); }

  Gossip* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gossip& from);
  void MergeFrom(const Gossip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gossip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Gossip_Tuple Tuple;

  // accessors -------------------------------------------------------

  // repeated .communication.Gossip.Tuple tuple = 1;
  int tuple_size() const;
  void clear_tuple();
  static const int kTupleFieldNumber = 1;
  const ::communication::Gossip_Tuple& tuple(int index) const;
  ::communication::Gossip_Tuple* mutable_tuple(int index);
  ::communication::Gossip_Tuple* add_tuple();
  ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >*
      mutable_tuple();
  const ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >&
      tuple() const;

  // @@protoc_insertion_point(class_scope:communication.Gossip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple > tuple_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Gossip* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_Get

// required string key = 1;
inline bool Request_Get::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Get::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Get::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Get::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Request_Get::key() const {
  // @@protoc_insertion_point(field_get:communication.Request.Get.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Get::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Request.Get.key)
}
inline void Request_Get::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Request.Get.key)
}
inline void Request_Get::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Request.Get.key)
}
inline ::std::string* Request_Get::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:communication.Request.Get.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Get::release_key() {
  // @@protoc_insertion_point(field_release:communication.Request.Get.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Get::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:communication.Request.Get.key)
}

// -------------------------------------------------------------------

// Request_Put

// required string key = 1;
inline bool Request_Put::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Put::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Put::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Put::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Request_Put::key() const {
  // @@protoc_insertion_point(field_get:communication.Request.Put.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Put::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Request.Put.key)
}
inline void Request_Put::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Request.Put.key)
}
inline void Request_Put::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Request.Put.key)
}
inline ::std::string* Request_Put::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:communication.Request.Put.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Put::release_key() {
  // @@protoc_insertion_point(field_release:communication.Request.Put.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Put::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:communication.Request.Put.key)
}

// required string value = 2;
inline bool Request_Put::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Put::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Put::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Put::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& Request_Put::value() const {
  // @@protoc_insertion_point(field_get:communication.Request.Put.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Put::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Request.Put.value)
}
inline void Request_Put::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Request.Put.value)
}
inline void Request_Put::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Request.Put.value)
}
inline ::std::string* Request_Put::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:communication.Request.Put.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Put::release_value() {
  // @@protoc_insertion_point(field_release:communication.Request.Put.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Put::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:communication.Request.Put.value)
}

// -------------------------------------------------------------------

// Request

// optional .communication.Request.Get get = 1;
inline bool Request::has_get() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_get() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_get() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_get() {
  if (get_ != NULL) get_->::communication::Request_Get::Clear();
  clear_has_get();
}
inline const ::communication::Request_Get& Request::get() const {
  // @@protoc_insertion_point(field_get:communication.Request.get)
  return get_ != NULL ? *get_ : *default_instance_->get_;
}
inline ::communication::Request_Get* Request::mutable_get() {
  set_has_get();
  if (get_ == NULL) {
    get_ = new ::communication::Request_Get;
  }
  // @@protoc_insertion_point(field_mutable:communication.Request.get)
  return get_;
}
inline ::communication::Request_Get* Request::release_get() {
  // @@protoc_insertion_point(field_release:communication.Request.get)
  clear_has_get();
  ::communication::Request_Get* temp = get_;
  get_ = NULL;
  return temp;
}
inline void Request::set_allocated_get(::communication::Request_Get* get) {
  delete get_;
  get_ = get;
  if (get) {
    set_has_get();
  } else {
    clear_has_get();
  }
  // @@protoc_insertion_point(field_set_allocated:communication.Request.get)
}

// optional .communication.Request.Put put = 2;
inline bool Request::has_put() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_put() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_put() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_put() {
  if (put_ != NULL) put_->::communication::Request_Put::Clear();
  clear_has_put();
}
inline const ::communication::Request_Put& Request::put() const {
  // @@protoc_insertion_point(field_get:communication.Request.put)
  return put_ != NULL ? *put_ : *default_instance_->put_;
}
inline ::communication::Request_Put* Request::mutable_put() {
  set_has_put();
  if (put_ == NULL) {
    put_ = new ::communication::Request_Put;
  }
  // @@protoc_insertion_point(field_mutable:communication.Request.put)
  return put_;
}
inline ::communication::Request_Put* Request::release_put() {
  // @@protoc_insertion_point(field_release:communication.Request.put)
  clear_has_put();
  ::communication::Request_Put* temp = put_;
  put_ = NULL;
  return temp;
}
inline void Request::set_allocated_put(::communication::Request_Put* put) {
  delete put_;
  put_ = put;
  if (put) {
    set_has_put();
  } else {
    clear_has_put();
  }
  // @@protoc_insertion_point(field_set_allocated:communication.Request.put)
}

// -------------------------------------------------------------------

// Response

// optional bool err = 1 [default = false];
inline bool Response::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_err() {
  err_ = false;
  clear_has_err();
}
inline bool Response::err() const {
  // @@protoc_insertion_point(field_get:communication.Response.err)
  return err_;
}
inline void Response::set_err(bool value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:communication.Response.err)
}

// optional bool succeed = 2;
inline bool Response::has_succeed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_succeed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_succeed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_succeed() {
  succeed_ = false;
  clear_has_succeed();
}
inline bool Response::succeed() const {
  // @@protoc_insertion_point(field_get:communication.Response.succeed)
  return succeed_;
}
inline void Response::set_succeed(bool value) {
  set_has_succeed();
  succeed_ = value;
  // @@protoc_insertion_point(field_set:communication.Response.succeed)
}

// optional string value = 3;
inline bool Response::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& Response::value() const {
  // @@protoc_insertion_point(field_get:communication.Response.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Response.value)
}
inline void Response::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Response.value)
}
inline void Response::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Response.value)
}
inline ::std::string* Response::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:communication.Response.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response::release_value() {
  // @@protoc_insertion_point(field_release:communication.Response.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:communication.Response.value)
}

// optional int64 timestamp = 4;
inline bool Response::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Response::timestamp() const {
  // @@protoc_insertion_point(field_get:communication.Response.timestamp)
  return timestamp_;
}
inline void Response::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:communication.Response.timestamp)
}

// -------------------------------------------------------------------

// Gossip_Tuple

// required string key = 1;
inline bool Gossip_Tuple::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gossip_Tuple::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gossip_Tuple::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gossip_Tuple::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Gossip_Tuple::key() const {
  // @@protoc_insertion_point(field_get:communication.Gossip.Tuple.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip_Tuple::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Gossip.Tuple.key)
}
inline void Gossip_Tuple::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Gossip.Tuple.key)
}
inline void Gossip_Tuple::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Gossip.Tuple.key)
}
inline ::std::string* Gossip_Tuple::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:communication.Gossip.Tuple.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Gossip_Tuple::release_key() {
  // @@protoc_insertion_point(field_release:communication.Gossip.Tuple.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip_Tuple::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:communication.Gossip.Tuple.key)
}

// required string value = 2;
inline bool Gossip_Tuple::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Gossip_Tuple::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Gossip_Tuple::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Gossip_Tuple::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& Gossip_Tuple::value() const {
  // @@protoc_insertion_point(field_get:communication.Gossip.Tuple.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip_Tuple::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Gossip.Tuple.value)
}
inline void Gossip_Tuple::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Gossip.Tuple.value)
}
inline void Gossip_Tuple::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Gossip.Tuple.value)
}
inline ::std::string* Gossip_Tuple::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:communication.Gossip.Tuple.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Gossip_Tuple::release_value() {
  // @@protoc_insertion_point(field_release:communication.Gossip.Tuple.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip_Tuple::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:communication.Gossip.Tuple.value)
}

// required int64 timestamp = 3;
inline bool Gossip_Tuple::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Gossip_Tuple::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Gossip_Tuple::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Gossip_Tuple::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 Gossip_Tuple::timestamp() const {
  // @@protoc_insertion_point(field_get:communication.Gossip.Tuple.timestamp)
  return timestamp_;
}
inline void Gossip_Tuple::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:communication.Gossip.Tuple.timestamp)
}

// -------------------------------------------------------------------

// Gossip

// repeated .communication.Gossip.Tuple tuple = 1;
inline int Gossip::tuple_size() const {
  return tuple_.size();
}
inline void Gossip::clear_tuple() {
  tuple_.Clear();
}
inline const ::communication::Gossip_Tuple& Gossip::tuple(int index) const {
  // @@protoc_insertion_point(field_get:communication.Gossip.tuple)
  return tuple_.Get(index);
}
inline ::communication::Gossip_Tuple* Gossip::mutable_tuple(int index) {
  // @@protoc_insertion_point(field_mutable:communication.Gossip.tuple)
  return tuple_.Mutable(index);
}
inline ::communication::Gossip_Tuple* Gossip::add_tuple() {
  // @@protoc_insertion_point(field_add:communication.Gossip.tuple)
  return tuple_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >*
Gossip::mutable_tuple() {
  // @@protoc_insertion_point(field_mutable_list:communication.Gossip.tuple)
  return &tuple_;
}
inline const ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >&
Gossip::tuple() const {
  // @@protoc_insertion_point(field_list:communication.Gossip.tuple)
  return tuple_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
