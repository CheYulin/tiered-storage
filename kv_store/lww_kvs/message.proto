package communication;

message Request {

  message Get {
    required string key = 1;
  }

  message Put {
    required string key = 1;
    required string value = 2;
    optional int64 timestamp = 3;
  }

  repeated Get get = 1;
  repeated Put put = 2;
}


message Response {
  message Tuple {
    required bool succeed = 1;
    required string key = 2;
    optional string value = 3;
    optional int64 timestamp = 4;
  }

  repeated Tuple tuple = 1;
}


message Gossip {
  message Tuple {
    required string key = 1;
    required string value = 2;
    required int64 timestamp = 3;
  }
  repeated Tuple tuple = 1;
}

message Key_Request {
  message Tuple {
    required string key = 1;
    required int64 global_memory_replication = 2;
    required int64 global_ebs_replication = 3;
  }
  required string sender = 1;
  repeated Tuple tuple = 2;
  optional string target_tier = 3;
}

message Key_Response {
  message Address {
    required string addr = 1;
  }
  message Tuple {
    required string key = 1;
    repeated Address address = 2;
  }
  repeated Tuple tuple = 1;
}

message Payload {
  required string value = 1;
  required int64 timestamp = 2;
}

message Replication_Factor {
  required int64 global_memory_replication = 1;
  required int64 global_ebs_replication = 2;
}

message Replication_Factor_Request {
  message Tuple {
    required string key = 1;
    required int64 global_memory_replication = 2;
    required int64 global_ebs_replication = 3;
  }
  repeated Tuple tuple = 1;
}

message Storage_Update {
  message EBS {
    required string id = 1;
    required int64 storage = 2;
  }

  required string node_ip = 1;
  required string node_type = 2;
  optional int64 memory_storage = 3;
  optional float thread_occupancy = 4;
  repeated EBS ebs = 5;
}

message Key_Hotness_Update {
  message Tuple {
    required string key = 1;
    required int64 access = 2;
  }
  required string node_ip = 1;
  repeated Tuple tuple = 2;
}
