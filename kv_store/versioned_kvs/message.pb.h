// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace communication {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class Gossip;
class Gossip_Tuple;
class Request;
class Response;

// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // required string type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // required string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional int64 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // map<int64, int64> version_vector = 4;
  int version_vector_size() const;
  void clear_version_vector();
  static const int kVersionVectorFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
      version_vector() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
      mutable_version_vector();

  // @@protoc_insertion_point(class_scope:communication.Request)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int64 value_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      Request_VersionVectorEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > version_vector_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional bool err = 1 [default = false];
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 1;
  bool err() const;
  void set_err(bool value);

  // optional bool succeed = 2;
  bool has_succeed() const;
  void clear_succeed();
  static const int kSucceedFieldNumber = 2;
  bool succeed() const;
  void set_succeed(bool value);

  // optional int64 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // map<int64, int64> version_vector = 4;
  int version_vector_size() const;
  void clear_version_vector();
  static const int kVersionVectorFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
      version_vector() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
      mutable_version_vector();

  // @@protoc_insertion_point(class_scope:communication.Response)
 private:
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_succeed();
  inline void clear_has_succeed();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 value_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      Response_VersionVectorEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > version_vector_;
  bool err_;
  bool succeed_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class Gossip_Tuple : public ::google::protobuf::Message {
 public:
  Gossip_Tuple();
  virtual ~Gossip_Tuple();

  Gossip_Tuple(const Gossip_Tuple& from);

  inline Gossip_Tuple& operator=(const Gossip_Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gossip_Tuple& default_instance();

  void Swap(Gossip_Tuple* other);

  // implements Message ----------------------------------------------

  inline Gossip_Tuple* New() const { return New(NULL); }

  Gossip_Tuple* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gossip_Tuple& from);
  void MergeFrom(const Gossip_Tuple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gossip_Tuple* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // required string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // map<int64, int64> version_vector = 2;
  int version_vector_size() const;
  void clear_version_vector();
  static const int kVersionVectorFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
      version_vector() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
      mutable_version_vector();

  // required int64 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:communication.Gossip.Tuple)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 >
      Gossip_Tuple_VersionVectorEntry;
  ::google::protobuf::internal::MapField<
      ::google::protobuf::int64, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > version_vector_;
  ::google::protobuf::int64 value_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Gossip_Tuple* default_instance_;
};
// -------------------------------------------------------------------

class Gossip : public ::google::protobuf::Message {
 public:
  Gossip();
  virtual ~Gossip();

  Gossip(const Gossip& from);

  inline Gossip& operator=(const Gossip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gossip& default_instance();

  void Swap(Gossip* other);

  // implements Message ----------------------------------------------

  inline Gossip* New() const { return New(NULL); }

  Gossip* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Gossip& from);
  void MergeFrom(const Gossip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Gossip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Gossip_Tuple Tuple;

  // accessors -------------------------------------------------------

  // repeated .communication.Gossip.Tuple tuple = 1;
  int tuple_size() const;
  void clear_tuple();
  static const int kTupleFieldNumber = 1;
  const ::communication::Gossip_Tuple& tuple(int index) const;
  ::communication::Gossip_Tuple* mutable_tuple(int index);
  ::communication::Gossip_Tuple* add_tuple();
  ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >*
      mutable_tuple();
  const ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >&
      tuple() const;

  // @@protoc_insertion_point(class_scope:communication.Gossip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple > tuple_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static Gossip* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// required string type = 1;
inline bool Request::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_type();
}
inline const ::std::string& Request::type() const {
  // @@protoc_insertion_point(field_get:communication.Request.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_type(const ::std::string& value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Request.type)
}
inline void Request::set_type(const char* value) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Request.type)
}
inline void Request::set_type(const char* value, size_t size) {
  set_has_type();
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Request.type)
}
inline ::std::string* Request::mutable_type() {
  set_has_type();
  // @@protoc_insertion_point(field_mutable:communication.Request.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_type() {
  // @@protoc_insertion_point(field_release:communication.Request.type)
  clear_has_type();
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    set_has_type();
  } else {
    clear_has_type();
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:communication.Request.type)
}

// required string key = 2;
inline bool Request::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Request::key() const {
  // @@protoc_insertion_point(field_get:communication.Request.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Request.key)
}
inline void Request::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Request.key)
}
inline void Request::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Request.key)
}
inline ::std::string* Request::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:communication.Request.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request::release_key() {
  // @@protoc_insertion_point(field_release:communication.Request.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:communication.Request.key)
}

// optional int64 value = 3;
inline bool Request::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Request::value() const {
  // @@protoc_insertion_point(field_get:communication.Request.value)
  return value_;
}
inline void Request::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:communication.Request.value)
}

// map<int64, int64> version_vector = 4;
inline int Request::version_vector_size() const {
  return version_vector_.size();
}
inline void Request::clear_version_vector() {
  version_vector_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
Request::version_vector() const {
  // @@protoc_insertion_point(field_map:communication.Request.version_vector)
  return version_vector_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
Request::mutable_version_vector() {
  // @@protoc_insertion_point(field_mutable_map:communication.Request.version_vector)
  return version_vector_.MutableMap();
}

// -------------------------------------------------------------------

// Response

// optional bool err = 1 [default = false];
inline bool Response::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_err() {
  err_ = false;
  clear_has_err();
}
inline bool Response::err() const {
  // @@protoc_insertion_point(field_get:communication.Response.err)
  return err_;
}
inline void Response::set_err(bool value) {
  set_has_err();
  err_ = value;
  // @@protoc_insertion_point(field_set:communication.Response.err)
}

// optional bool succeed = 2;
inline bool Response::has_succeed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_succeed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_succeed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_succeed() {
  succeed_ = false;
  clear_has_succeed();
}
inline bool Response::succeed() const {
  // @@protoc_insertion_point(field_get:communication.Response.succeed)
  return succeed_;
}
inline void Response::set_succeed(bool value) {
  set_has_succeed();
  succeed_ = value;
  // @@protoc_insertion_point(field_set:communication.Response.succeed)
}

// optional int64 value = 3;
inline bool Response::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Response::value() const {
  // @@protoc_insertion_point(field_get:communication.Response.value)
  return value_;
}
inline void Response::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:communication.Response.value)
}

// map<int64, int64> version_vector = 4;
inline int Response::version_vector_size() const {
  return version_vector_.size();
}
inline void Response::clear_version_vector() {
  version_vector_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
Response::version_vector() const {
  // @@protoc_insertion_point(field_map:communication.Response.version_vector)
  return version_vector_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
Response::mutable_version_vector() {
  // @@protoc_insertion_point(field_mutable_map:communication.Response.version_vector)
  return version_vector_.MutableMap();
}

// -------------------------------------------------------------------

// Gossip_Tuple

// required string key = 1;
inline bool Gossip_Tuple::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Gossip_Tuple::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Gossip_Tuple::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Gossip_Tuple::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& Gossip_Tuple::key() const {
  // @@protoc_insertion_point(field_get:communication.Gossip.Tuple.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip_Tuple::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:communication.Gossip.Tuple.key)
}
inline void Gossip_Tuple::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:communication.Gossip.Tuple.key)
}
inline void Gossip_Tuple::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:communication.Gossip.Tuple.key)
}
inline ::std::string* Gossip_Tuple::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:communication.Gossip.Tuple.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Gossip_Tuple::release_key() {
  // @@protoc_insertion_point(field_release:communication.Gossip.Tuple.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip_Tuple::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:communication.Gossip.Tuple.key)
}

// map<int64, int64> version_vector = 2;
inline int Gossip_Tuple::version_vector_size() const {
  return version_vector_.size();
}
inline void Gossip_Tuple::clear_version_vector() {
  version_vector_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >&
Gossip_Tuple::version_vector() const {
  // @@protoc_insertion_point(field_map:communication.Gossip.Tuple.version_vector)
  return version_vector_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::google::protobuf::int64 >*
Gossip_Tuple::mutable_version_vector() {
  // @@protoc_insertion_point(field_mutable_map:communication.Gossip.Tuple.version_vector)
  return version_vector_.MutableMap();
}

// required int64 value = 3;
inline bool Gossip_Tuple::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Gossip_Tuple::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Gossip_Tuple::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Gossip_Tuple::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::int64 Gossip_Tuple::value() const {
  // @@protoc_insertion_point(field_get:communication.Gossip.Tuple.value)
  return value_;
}
inline void Gossip_Tuple::set_value(::google::protobuf::int64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:communication.Gossip.Tuple.value)
}

// -------------------------------------------------------------------

// Gossip

// repeated .communication.Gossip.Tuple tuple = 1;
inline int Gossip::tuple_size() const {
  return tuple_.size();
}
inline void Gossip::clear_tuple() {
  tuple_.Clear();
}
inline const ::communication::Gossip_Tuple& Gossip::tuple(int index) const {
  // @@protoc_insertion_point(field_get:communication.Gossip.tuple)
  return tuple_.Get(index);
}
inline ::communication::Gossip_Tuple* Gossip::mutable_tuple(int index) {
  // @@protoc_insertion_point(field_mutable:communication.Gossip.tuple)
  return tuple_.Mutable(index);
}
inline ::communication::Gossip_Tuple* Gossip::add_tuple() {
  // @@protoc_insertion_point(field_add:communication.Gossip.tuple)
  return tuple_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >*
Gossip::mutable_tuple() {
  // @@protoc_insertion_point(field_mutable_list:communication.Gossip.tuple)
  return &tuple_;
}
inline const ::google::protobuf::RepeatedPtrField< ::communication::Gossip_Tuple >&
Gossip::tuple() const {
  // @@protoc_insertion_point(field_list:communication.Gossip.tuple)
  return tuple_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace communication

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
